{"version":3,"sources":["utilities/dateConverter.js","utilities/slotLocator.js","utilities/dataProcessor.js","utilities/http.js","components/dialogs/SearchDialog.js","components/dialogs/SubscribeDialog.js","components/header/Menubar.js","components/main/GridBodyTemplates.js","components/main/FilterItemTemplates.js","components/main/SlotDataTable.js","resources/beep.mp3","components/main/Main.js","reportWebVitals.js","index.js"],"names":["convertDateString","date","dateString","getDate","monthString","getMonth","getFullYear","filterDate","value","filter","undefined","trim","month","day","formatDate","interval","locateSlots","config","url","selectedSearch","showFutureDates","pin","Date","selectedDistrict","triggerSlotsFetchForFutureDates","setDataSet","autoRefresh","setInterval","a","triggerSlotsFetch","fetch","headers","Accept","then","response","json","slots","catch","error","requestTimeStamp","toLocaleString","dataSet","processedDataSet","errorMessage","timeStamp","slotList","length","forEach","data","processedData","name","address","district_name","pincode","fee_type","fee","age","min_age_limit","vaccine","available_capacity_dose1","push","dose","doseCapacity","available_capacity_dose2","processSessions","sessions","processError","callPublicApis","paramKey","queryURL","requestParams","queryString","method","SearchDialog","searchView","statesList","displaySearchDialog","setDisplaySearchDialog","messages","useRef","useState","setSelectedSearch","setPin","selectedState","setSelectedState","setSelectedDistrict","setShowFutureDates","setAutoRefresh","recurringSearchTriggered","setRecurringSearchTriggered","districts","setDistricts","disabledDistrictField","setDisabledDistrictField","searchSlotsByPin","test","current","show","sticky","severity","summary","searchSlotsByDistrict","handleStateSelection","selectedStateId","listOfDistricts","Fragment","onChange","event","className","placeholder","useGrouping","disabled","optionLabel","optionValue","options","e","header","visible","onHide","resizable","breakpoints","style","width","label","selectedSearchValue","clear","checked","inputId","htmlFor","onClick","clearInterval","ref","Subscribe","displaySubscribeDialog","setDisplaySubscribeDialog","subscriberMailId","setSubscriberMailId","subscribedPincodes","setSubscribedPincodes","isValidPincode","setIsValidPincode","regex","split","every","validatePincodes","target","marginTop","padding","startsWith","console","log","AppMenuBar","states","useEffect","items","template","icon","model","nameBodyTemplate","rowData","pincodeBodyTemplate","doseBodyTemplate","feeTypeBodyTemplate","ageLimitBodyTemplate","vaccineTypeBodyTemplate","dateBodyTemplate","dosesItemTemplate","option","feeTypeItemTemplate","ageLimitItemTemplate","SlotDataTable","dt","globalFilter","setGlobalFilter","selectedDose","setSelectedDose","selectedFeeType","setSelectedFeeType","selectedAgeLimit","setSelectedAgeLimit","selectedVaccineType","setSelectedVaccineType","selectedDate","setSelectedDate","enableVolume","setEnableVolume","type","reset","doseFilter","itemTemplate","FilterTemplates","feeTypeFilter","ageLimitFilter","vaccineTypeFilter","dateFilter","dateFormat","paginator","rows","emptyMessage","paginatorPosition","alwaysShowPaginator","field","body","BodyTemplates","sortable","filterElement","filterFunction","Main","audioRef","toastRef","setStates","listOfStates","position","dataset","play","detail","life","src","beepsound","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8bb2d69b.chunk.js","sourcesContent":["export function convertDateString(date) {\r\n    let dateString = date.getDate();\r\n    let monthString = date.getMonth() + 1; \r\n    let yearString = date.getFullYear();\r\n    if(dateString < 10) {\r\n        dateString ='0' + dateString;\r\n    } \r\n    if(monthString < 10) {\r\n        monthString = '0' + monthString;\r\n    }\r\n\r\n    return dateString + '-' + monthString + '-' + yearString\r\n}\r\n\r\nexport function filterDate(value, filter) {\r\n    if (filter === undefined || filter === null || (typeof filter === 'string' && filter.trim() === '')) {\r\n        return true;\r\n    }\r\n\r\n    if (value === undefined || value === null) {\r\n        return false;\r\n    }\r\n\r\n    return value === formatDate(filter);\r\n}\r\n\r\nfunction formatDate(date) {\r\n    let month = date.getMonth() + 1;\r\n    let day = date.getDate();\r\n\r\n    if (month < 10) {\r\n        month = '0' + month;\r\n    }\r\n\r\n    if (day < 10) {\r\n        day = '0' + day;\r\n    }\r\n\r\n    return day + '-' + month + '-' + date.getFullYear();\r\n}","import { convertDateString } from './dateConverter'\r\nimport { processSessions, processError } from './dataProcessor'\r\n\r\nlet interval;\r\n\r\nexport const locateSlots = (config) => {\r\n    let url = '';\r\n    if (config.selectedSearch === 'searchByPin') {\r\n        if (config.showFutureDates) {\r\n            url = 'https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/calendarByPin?pincode=' + config.pin + '&date=' + convertDateString(new Date())\r\n        } else {\r\n            url = 'https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/findByPin?pincode=' + config.pin + '&date=' + convertDateString(new Date())\r\n        }\r\n    } else if (config.selectedSearch === 'searchByDistrict') {\r\n        if (config.showFutureDates) {\r\n            url = 'https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/calendarByDistrict?district_id=' + config.selectedDistrict + '&date=' + convertDateString(new Date())\r\n        } else {\r\n            url = 'https://cdn-api.co-vin.in/api/v2/appointment/sessions/public/findByDistrict?district_id=' + config.selectedDistrict + '&date=' + convertDateString(new Date())\r\n        }\r\n    }\r\n\r\n    if (!config.showFutureDates) {\r\n        triggerSlotsFetch({url, setDataSet: config.setDataSet});\r\n        if (config.autoRefresh) {\r\n            interval = setInterval(async () => {\r\n                triggerSlotsFetch({url, setDataSet: config.setDataSet})\r\n            }, 5000)\r\n        }\r\n    } else {\r\n        triggerSlotsFetchForFutureDates({url, setDataSet: config.setDataSet});\r\n        if (config.autoRefresh) {\r\n            interval = setInterval(async () => {\r\n                triggerSlotsFetchForFutureDates({url, setDataSet: config.setDataSet});\r\n            }, 5000)\r\n        }\r\n    }\r\n};\r\n\r\nexport const stopLocatingSlots = () => {\r\n    if (clearInterval) {\r\n        clearInterval(interval);\r\n    }\r\n};\r\n\r\nconst triggerSlotsFetchForFutureDates = ({url, setDataSet}) => {\r\n    if (url) {\r\n        fetch(url, {\r\n            headers: {\r\n                Accept: 'application/json'\r\n            }\r\n        }).then(response => response.json())\r\n            .then(slots => setDataSet({slots}))\r\n            .catch(error => setDataSet({error}))\r\n    }\r\n};\r\n\r\nconst triggerSlotsFetch = ({url, setDataSet}) => {\r\n    if (url) {\r\n        const requestTimeStamp = new Date().toLocaleString();\r\n        fetch(url, {\r\n            headers: {\r\n                Accept: 'application/json'\r\n            }\r\n        }).then(response => response.json())\r\n            .then(slots => setDataSet(processSessions(slots.sessions, requestTimeStamp)))\r\n            .catch(error => setDataSet(processError(error, requestTimeStamp)))\r\n    }\r\n};","export const processSessions = (dataSet, requestTimeStamp) => {\r\n    const processedDataSet = {\r\n        errorMessage: '',\r\n        timeStamp: requestTimeStamp,\r\n        slotList: []\r\n    };\r\n    if (!dataSet.length) {\r\n        processedDataSet.errorMessage = 'No slots available. Please refine search criteria'\r\n    }\r\n    dataSet.forEach((data) => {\r\n        const processedData = {\r\n            name: data.name,\r\n            address: data.address,\r\n            district_name: data.district_name,\r\n            pincode: data.pincode,\r\n            fee_type: data.fee_type,\r\n            fee: data.fee,\r\n            date: data.date,\r\n            age: data.min_age_limit === 18 ? 'Age 18+' : 'Age 45+',\r\n            vaccine: data.vaccine\r\n        }\r\n\r\n        if (data.available_capacity_dose1) {\r\n            processedDataSet.slotList.push({...processedData, dose: 'Dose1', doseCapacity: data.available_capacity_dose1})\r\n        }\r\n        if (data.available_capacity_dose2) {\r\n            processedDataSet.slotList.push({...processedData, dose: 'Dose2', doseCapacity: data.available_capacity_dose2})\r\n        }\r\n    })\r\n    return processedDataSet;\r\n}\r\n\r\nexport const processError = (error, requestTimeStamp) => {\r\n     const processedDataSet = {\r\n         errorMessage: `Not able to connect Cowin server at ${requestTimeStamp}. If auto refresh is not checked please search again`,\r\n         timeStamp: requestTimeStamp,\r\n         slotList: []\r\n     }\r\n     return processedDataSet\r\n}","export const callPublicApis = async (config) => {\r\n    let queryURL = config.url;\r\n    let requestParams = config.requestParams;\r\n    let queryString = '';\r\n    for (const paramKey in requestParams) {\r\n        if (queryString.length === 0) {\r\n            queryString = '?' + paramKey + '=' + requestParams[paramKey]\r\n        } else {\r\n            queryString = queryString + '&' + paramKey + '=' + requestParams[paramKey]\r\n        }\r\n    }\r\n\r\n    const response = fetch(queryURL + queryString, {\r\n        method: 'GET',\r\n            headers: {\r\n                Accept: 'application/json'\r\n            }\r\n    })\r\n\r\n    return response;\r\n}","import React, { useRef, useState } from 'react'\r\nimport { SelectButton } from 'primereact/selectbutton';\r\nimport { Divider } from 'primereact/divider'\r\nimport { Card }  from 'primereact/card'\r\nimport { Dialog } from 'primereact/dialog'\r\nimport { InputNumber } from 'primereact/inputnumber'\r\nimport { Checkbox } from 'primereact/checkbox';\r\nimport { Dropdown } from 'primereact/dropdown'\r\nimport { Button } from 'primereact/button'\r\nimport { Messages } from 'primereact/messages'\r\nimport { locateSlots, stopLocatingSlots} from \"../../utilities/slotLocator\";\r\nimport { callPublicApis } from \"../../utilities/http\";\r\n\r\nexport default function SearchDialog({ statesList, setDataSet, displaySearchDialog, setDisplaySearchDialog }) {\r\n    let searchView;\r\n    const messages = useRef(null);\r\n\r\n    const [selectedSearch, setSelectedSearch] = useState('searchByPin');\r\n    const [pin, setPin] = useState();\r\n    const [selectedState, setSelectedState] = useState('');\r\n    const [selectedDistrict, setSelectedDistrict] = useState('');\r\n    const [showFutureDates, setShowFutureDates] = useState(false);\r\n    const [autoRefresh, setAutoRefresh] = useState(false);\r\n    const [recurringSearchTriggered, setRecurringSearchTriggered] = useState(false);\r\n\r\n    const [districts, setDistricts] = useState([]);\r\n    const [disabledDistrictField, setDisabledDistrictField] = useState(true);\r\n\r\n    const searchOptions = [\r\n        {label: 'By Pin', value: 'searchByPin'},\r\n        {label: 'By District', value: 'searchByDistrict'}\r\n    ];\r\n\r\n    const  searchSlots = () => {\r\n        if (selectedSearch === 'searchByPin') {\r\n            searchSlotsByPin()\r\n        } else if (selectedSearch === 'searchByDistrict') {\r\n            searchSlotsByDistrict()\r\n        }\r\n    };\r\n\r\n    const stopSearch = () => {\r\n        stopLocatingSlots();\r\n        setRecurringSearchTriggered(false);\r\n    };\r\n\r\n    const searchSlotsByPin = () => {\r\n        const regex = /^[1-9][0-9]{5}$/;\r\n        if (!regex.test(pin)) {\r\n            messages.current.show({sticky: true, severity: 'error', summary: 'Invalid pincode'});\r\n            return;\r\n        }\r\n        setDisplaySearchDialog(false);\r\n        if (autoRefresh) {\r\n            setRecurringSearchTriggered(true);\r\n        }\r\n        locateSlots({selectedSearch, pin,  autoRefresh, showFutureDates, setDataSet})\r\n    };\r\n\r\n    const searchSlotsByDistrict = () => {\r\n        if (!selectedDistrict) {\r\n            messages.current.show({sticky: true, severity: 'error', summary: 'Please select district'});\r\n            return;\r\n        }\r\n        setDisplaySearchDialog(false);\r\n        if (autoRefresh) {\r\n            setRecurringSearchTriggered(true);\r\n        }\r\n        locateSlots({selectedSearch, selectedDistrict,  autoRefresh, showFutureDates, setDataSet})\r\n    };\r\n\r\n    const handleStateSelection = async (selectedStateId) => {\r\n        if (selectedStateId) {\r\n            setDisabledDistrictField(false)\r\n        } else {\r\n            setDisabledDistrictField(true)\r\n        }\r\n        setSelectedState(selectedStateId);\r\n        const response = await callPublicApis({\r\n            url: 'https://cdn-api.co-vin.in/api/v2/admin/location/districts' + `/${selectedStateId}`\r\n        });\r\n        const listOfDistricts = await response.json();\r\n        setDistricts(listOfDistricts.districts);\r\n    };\r\n\r\n    const setSelectedSearchValue = (selectedSearchValue) => {\r\n        if (selectedSearchValue === null) {\r\n            setSelectedSearch(selectedSearch)\r\n        } else {\r\n            setSelectedSearch(selectedSearchValue);\r\n            if (messages && messages.current) {\r\n                messages.current.clear();\r\n            }\r\n        }\r\n    };\r\n\r\n    if (selectedSearch === 'searchByPin') {\r\n        searchView = (\r\n            <React.Fragment>\r\n                <InputNumber\r\n                    value={pin}\r\n                    onChange={(event) => setPin(event.value)}\r\n                    className=\"p-col-12\"\r\n                    placeholder=\"Enter Pincode\"\r\n                    useGrouping={false}\r\n                    disabled={recurringSearchTriggered}\r\n                />\r\n                <div className=\"p-col-12\"/>\r\n            </React.Fragment>\r\n        )\r\n    } else if (selectedSearch === 'searchByDistrict') {\r\n        searchView = (\r\n            <React.Fragment>\r\n                <Dropdown\r\n                    optionLabel=\"state_name\"\r\n                    optionValue=\"state_id\"\r\n                    value={selectedState}\r\n                    options={statesList}\r\n                    onChange={(e) => handleStateSelection(e.value)}\r\n                    placeholder=\"Select state\"\r\n                    className=\"p-col-12\"\r\n                    disabled={recurringSearchTriggered}\r\n                />\r\n                <Dropdown\r\n                    optionLabel=\"district_name\"\r\n                    optionValue=\"district_id\"\r\n                    value={selectedDistrict}\r\n                    options={districts}\r\n                    onChange={(e) => setSelectedDistrict(e.value)}\r\n                    className=\"p-col-12\"\r\n                    placeholder=\"Select district\"\r\n                    disabled={disabledDistrictField || recurringSearchTriggered}\r\n                />\r\n            </React.Fragment>\r\n        )\r\n    } else {\r\n        searchView = <div>Something went wrong. Please reload</div>\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Dialog header=\"Search Slots\"\r\n                    visible={displaySearchDialog}\r\n                    onHide={() => setDisplaySearchDialog(false)}\r\n                    resizable={false}\r\n                    breakpoints={{'1200': '75vw', '640px': '100vw'}}\r\n                    style={{width: '30vw'}}>\r\n                <div className=\"p-grid\">\r\n                    <div className=\"p-col p-d-flex p-jc-center\">\r\n                        <SelectButton\r\n                            value={selectedSearch}\r\n                            options={searchOptions}\r\n                            onChange={(event) => setSelectedSearchValue(event.value)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <Divider className=\"p-mt-1\"/>\r\n                <div className=\"p-grid\">\r\n                    {searchView}\r\n                    <div className=\"p-col-12\">\r\n                        <Checkbox\r\n                            checked={showFutureDates}\r\n                            onChange={(event) => setShowFutureDates(event.checked)}\r\n                            inputId=\"futureDates\"\r\n                            disabled={recurringSearchTriggered}\r\n                        />\r\n                        <label htmlFor=\"futureDates\" className=\"p-checkbox-label  p-ml-2\">Show for future dates</label>\r\n                    </div>\r\n                    <div className=\"p-col-12\">\r\n                        <Checkbox\r\n                            checked={autoRefresh}\r\n                            onChange={(event) => setAutoRefresh(event.checked)}\r\n                            inputId=\"autoRefresh\"\r\n                            disabled={recurringSearchTriggered}\r\n                        />\r\n                        <label htmlFor=\"autoRefresh\" className=\"p-checkbox-label  p-ml-2\">Auto refresh</label>\r\n                    </div>\r\n                    <div className=\"p-col-12\">\r\n                        <Button\r\n                            label=\"Find slot\"\r\n                            className=\"p-button p-col-12\"\r\n                            onClick={searchSlots}\r\n                            disabled={recurringSearchTriggered}\r\n                        />\r\n                    </div>\r\n                    {recurringSearchTriggered && <div className=\"p-col-12\">\r\n                        <Button\r\n                            label=\"Stop search\"\r\n                            className=\"p-button p-col-12\"\r\n                            onClick={stopSearch}\r\n                        />\r\n                    </div>}\r\n                    <Messages ref={messages} className=\"p-col-12 searchFieldErrorMessage\"/>\r\n                </div>\r\n                <Divider className=\"p-mt-2\"/>\r\n                <Card className=\"disclaimer\">\r\n                    <p>Do not close the browser if <b>'Auto refresh'</b> is selected. Once any slot is available the details will be displayed and you will also get a notification sound.</p>\r\n                    <p>Disclaimer : While we have real-time data, slot availability on CoWin changes rapidly. If you see availability, please book on CoWin instantly before the slots are lost.</p>\r\n                </Card>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { InputText } from 'primereact/inputtext'\r\nimport { Dialog } from 'primereact/dialog'\r\nimport { Button } from 'primereact/button'\r\n\r\nexport default function Subscribe({ displaySubscribeDialog, setDisplaySubscribeDialog }) {\r\n\r\n\r\n    const [subscriberMailId, setSubscriberMailId] = useState('');\r\n    const [subscribedPincodes, setSubscribedPincodes] = useState('');\r\n    const [isValidPincode, setIsValidPincode] = useState(false)\r\n\r\n    const validatePincodes = (subscribedPincodes) => {\r\n        setSubscribedPincodes(subscribedPincodes);\r\n        const regex = /^[1-9][0-9]{5}$/;\r\n        setIsValidPincode(subscribedPincodes.split(',').every((pincode) => {\r\n            return regex.test(pincode)\r\n        }));\r\n    }\r\n\r\n    const subscribe = () => {\r\n        subscribedPincodes.split(',').forEach(pincode => {\r\n            if (!pincode.startsWith(0)) {\r\n                console.log(pincode)\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Dialog header=\"Subscribe slots notification\"\r\n                    visible={displaySubscribeDialog}\r\n                    onHide={() => setDisplaySubscribeDialog(false)}\r\n                    resizable={false}\r\n                    breakpoints={{'1200': '75vw', '640px': '100vw'}}\r\n                    style={{width: '30vw'}}>\r\n                <InputText\r\n                    value={subscribedPincodes}\r\n                    onChange={(event) => validatePincodes(event.target.value)}\r\n                    className=\"p-col-12\"\r\n                    placeholder=\"Enter Pincode(use , from multiple)\"\r\n                />\r\n                <InputText\r\n                    value={subscriberMailId}\r\n                    onChange={(event) => setSubscriberMailId(event.value)}\r\n                    className=\"p-col-12\"\r\n                    style={{marginTop: '1rem'}}\r\n                    placeholder=\"Enter email id\"\r\n                />\r\n                <div className=\"p-col-12\" style={{padding: '0.5rem 0'}}>\r\n                    <Button\r\n                        label=\"Subscribe\"\r\n                        className=\"p-button p-col-12\"\r\n                        onClick={subscribe}\r\n                        style={{marginTop: '0.5rem'}}\r\n                        disabled={!isValidPincode}\r\n                    />\r\n                </div>\r\n            </Dialog>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Menubar } from 'primereact/menubar';\r\nimport { Button } from 'primereact/button'\r\nimport SearchDialog  from '../dialogs/SearchDialog'\r\nimport SubscribeDialog from '../dialogs/SubscribeDialog'\r\n\r\nexport default function AppMenuBar({ states, setDataSet }) {\r\n    const [displaySearchDialog, setDisplaySearchDialog] = useState(false)\r\n    const [displaySubscribeDialog, setDisplaySubscribeDialog] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setDisplaySearchDialog(true);\r\n    }, [])\r\n    const items = [\r\n        {\r\n            template: () => {\r\n                return (\r\n                    <React.Fragment>\r\n                        <Button label=\"Search Slots\" icon=\"pi pi-bell\" className=\"p-button-raised p-mr-2\" onClick={() => setDisplaySearchDialog(true)}/>\r\n                        <SearchDialog statesList={states}\r\n                                      setDataSet={setDataSet}\r\n                                      displaySearchDialog={displaySearchDialog}\r\n                                      setDisplaySearchDialog={setDisplaySearchDialog}/>\r\n                    </React.Fragment>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            template: () => {\r\n                return (\r\n                    <React.Fragment>\r\n                        <Button label=\"Notify Slots\" icon=\"pi pi-bell\" className=\"p-button-raised p-mr-2\" onClick={() => setDisplaySubscribeDialog(true)}/>\r\n                        <SubscribeDialog displaySubscribeDialog={displaySubscribeDialog}\r\n                                         setDisplaySubscribeDialog={setDisplaySubscribeDialog}/>\r\n                    </React.Fragment>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            template: () => {\r\n                return (<Button label=\"About Us\" icon=\"pi pi-users\" className=\"p-button-raised p-mr-2\"/>);\r\n            }\r\n        },\r\n        {\r\n            template: () => {\r\n                return (<Button label=\"Donate\" icon=\"pi pi-bell\" className=\"p-button-raised p-mr-2\"/>);\r\n            }\r\n        }\r\n    ]\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"card\">\r\n                <Menubar model={items}/>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Badge } from 'primereact/badge'\r\n\r\nconst nameBodyTemplate = (rowData) => {\r\n    return (\r\n        <React.Fragment>\r\n            <h3 className=\"nameColumn p-m-0 p-p-0\">\r\n                {rowData.name}\r\n                <br/>\r\n                <i className=\"pi pi-map-marker p-mt-1\"></i>\r\n                <span className=\"p-ml-1\">{rowData.address}, {rowData.district_name}</span>\r\n            </h3>\r\n        </React.Fragment>\r\n    )\r\n};\r\n\r\nconst pincodeBodyTemplate = (rowData) => {\r\n    return (\r\n        <React.Fragment>\r\n            <span className=\"p-column-title\">District</span>\r\n            <span className=\"image-text\">{rowData.pincode}</span>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nconst doseBodyTemplate = (rowData) => {\r\n    return (\r\n        <React.Fragment>\r\n            <span className=\"p-column-title\">Dose (Slots)</span>\r\n            <span className=\"image-text\">{rowData.dose}</span>\r\n            <Badge value={rowData.doseCapacity} severity=\"success\" className=\"p-ml-2\"></Badge>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nconst feeTypeBodyTemplate = (rowData) => {\r\n    return (\r\n        <React.Fragment>\r\n            <span className=\"p-column-title\">Fee</span>\r\n            <span className=\"image-text\">{rowData.fee_type}</span>\r\n            {rowData.fee_type === 'Paid' && <Badge value={rowData.fee} severity=\"danger\" className=\"p-ml-2\"></Badge>}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nconst ageLimitBodyTemplate = (rowData) => {\r\n    return (\r\n        <React.Fragment>\r\n            <span className=\"p-column-title\">Age</span>\r\n            <span className=\"image-text\">{rowData.age}</span>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nconst vaccineTypeBodyTemplate = (rowData) => {\r\n    return (\r\n        <React.Fragment>\r\n            <span className=\"p-column-title\">Vaccine</span>\r\n            <span className=\"image-text\">{rowData.vaccine}</span>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nconst dateBodyTemplate = (rowData) => {\r\n    return (\r\n        <React.Fragment>\r\n            <span className=\"p-column-title\">Date</span>\r\n            <span>{rowData.date}</span>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport { nameBodyTemplate, pincodeBodyTemplate, dateBodyTemplate, doseBodyTemplate, feeTypeBodyTemplate, ageLimitBodyTemplate, vaccineTypeBodyTemplate }","\r\nconst dosesItemTemplate = (option) => {\r\n    return (\r\n        <div className=\"p-multiselect-representative-option\">\r\n            <span className=\"image-text\">{option.name}</span>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst feeTypeItemTemplate = (option) => {\r\n    return (\r\n        <div>\r\n            <span className=\"image-text\">{option.name}</span>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ageLimitItemTemplate = (option) => {\r\n    return (\r\n        <div>\r\n            <span className=\"image-text\">{option.name}</span>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst vaccineTypeItemTemplate = (option) => {\r\n    return (\r\n        <div>\r\n            <span className=\"image-text\">{option.name}</span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport { dosesItemTemplate, ageLimitItemTemplate, feeTypeItemTemplate, vaccineTypeItemTemplate }","import React, { useState, useRef } from 'react';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Button } from 'primereact/button';\r\nimport { Calendar } from 'primereact/calendar';\r\nimport { MultiSelect } from 'primereact/multiselect';\r\nimport { filterDate } from '../../utilities/dateConverter'\r\nimport * as BodyTemplates from './GridBodyTemplates'\r\nimport * as FilterTemplates from './FilterItemTemplates'\r\n\r\nexport default function SlotDataTable({ dataSet }) {\r\n\r\n    const dt = useRef(null);\r\n\r\n    const [globalFilter, setGlobalFilter] = useState('');\r\n    const [selectedDose, setSelectedDose] = useState(null);\r\n    const [selectedFeeType, setSelectedFeeType] = useState(null);\r\n    const [selectedAgeLimit, setSelectedAgeLimit] = useState(null);\r\n    const [selectedVaccineType, setSelectedVaccineType] = useState(null);\r\n    const [selectedDate, setSelectedDate] = useState(null);\r\n    const [enableVolume, setEnableVolume] = useState(true);\r\n\r\n    const doses = [\r\n        {name: \"Dose1\", value: 'Dose1'},\r\n        {name: \"Dose2\", value: 'Dose2'},\r\n    ];\r\n\r\n    const feeType = [\r\n        {name: \"Free\", value: 'Free'},\r\n        {name: \"Paid\", value: 'Paid'},\r\n    ];\r\n\r\n    const ageLimit = [\r\n        {name: 'Age 18+', value: 'Age 18+'},\r\n        {name: 'Age 45+', value: 'Age 45+'}\r\n    ];\r\n\r\n    const vaccineType = [\r\n        {name: 'COVISHIELD', value: 'COVISHIELD'},\r\n        {name: 'COVAXIN', value: 'COVAXIN'}\r\n    ];\r\n\r\n    const onDosesChange = (e) => {\r\n        dt.current.filter(e.value, 'dose', 'in');\r\n        setSelectedDose(e.value);\r\n    };\r\n\r\n    const onFeeTypeChange = (e) => {\r\n        dt.current.filter(e.value, 'fee_type', 'in');\r\n        setSelectedFeeType(e.value);\r\n    };\r\n\r\n    const onAgeLimitChange = (e) => {\r\n        dt.current.filter(e.value, 'age', 'in');\r\n        setSelectedAgeLimit(e.value);\r\n    };\r\n\r\n    const onVaccineTypeChange = (e) => {\r\n        dt.current.filter(e.value, 'vaccine', 'in');\r\n        setSelectedVaccineType(e.value);\r\n    };\r\n\r\n    const onDateChange = (e) => {\r\n        dt.current.filter(e.value, 'date', 'custom');\r\n        setSelectedDate(e.value);\r\n    };\r\n\r\n    const reset = () => {\r\n        setSelectedDose(null);\r\n        setSelectedDate(null);\r\n        setSelectedFeeType(null);\r\n        setSelectedAgeLimit(null);\r\n        setSelectedVaccineType(null);\r\n        setGlobalFilter('');\r\n        dt.current.reset();\r\n    };\r\n\r\n    const header = (\r\n        <div className=\"table-header p-grid p-m-0\">\r\n            <Button icon=\"pi pi-volume-up\" className={`p-d-none p-mr-2 p-d-md-${enableVolume ? 'inline':'none'}`} onClick={() => setEnableVolume(false)}/>\r\n            <Button icon=\"pi pi-volume-off\" className={`p-d-none p-mr-2 p-d-md-${!enableVolume ? 'inline':'none'}`} onClick={() => setEnableVolume(true)}/>\r\n            <div className=\"p-inputgroup p-col-12 p-md-5 p-lg-3 p-p-0\">\r\n                <InputText type=\"search\" value={globalFilter} onChange={(e) => setGlobalFilter(e.target.value)} placeholder=\"Global Search\" />\r\n                <Button icon=\"pi pi-filter-slash\" onClick={reset}/>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    const doseFilter = <MultiSelect value={selectedDose} options={doses} itemTemplate={FilterTemplates.dosesItemTemplate} onChange={onDosesChange} optionLabel=\"name\" optionValue=\"value\" placeholder=\"All\" className=\"p-column-filter\" />;\r\n    const feeTypeFilter = <MultiSelect value={selectedFeeType} options={feeType} itemTemplate={FilterTemplates.feeTypeItemTemplate} onChange={onFeeTypeChange} optionLabel=\"name\" optionValue=\"value\" placeholder=\"All\" className=\"p-column-filter\" />;\r\n    const ageLimitFilter = <MultiSelect value={selectedAgeLimit} options={ageLimit} itemTemplate={FilterTemplates.ageLimitItemTemplate} onChange={onAgeLimitChange} optionLabel=\"name\" optionValue=\"value\" placeholder=\"All\" className=\"p-column-filter\" />;\r\n    const vaccineTypeFilter = <MultiSelect value={selectedVaccineType} options={vaccineType} onChange={onVaccineTypeChange} optionLabel=\"name\" optionValue=\"value\" placeholder=\"All\" style={{width: '100%'}} />;\r\n    const dateFilter = <Calendar value={selectedDate} onChange={onDateChange} dateFormat=\"dd-mm-yy\" className=\"p-column-filter\" placeholder=\"Date\"/>;\r\n\r\n    return (\r\n        <div className=\"datatable-slots-container\">\r\n            <div className=\"card\">\r\n                <DataTable ref={dt} value={dataSet.slotList}\r\n                           paginator rows={10}\r\n                           header={header}\r\n                           className=\"p-datatable-slots p-datatable-gridlines p-datatable-striped\"\r\n                           globalFilter={globalFilter}\r\n                           emptyMessage={dataSet.errorMessage}\r\n                           paginatorPosition=\"top\"\r\n                           alwaysShowPaginator={false}>\r\n                    <Column style={{width : '25%'}} field=\"name\" header=\"Name\" body={BodyTemplates.nameBodyTemplate} sortable/>\r\n                    <Column style={{width : '10%'}} field=\"pincode\" header=\"Pincode\" body={BodyTemplates.pincodeBodyTemplate} sortable/>\r\n                    <Column field=\"date\" header=\"Date\" body={BodyTemplates.dateBodyTemplate} filter filterElement={dateFilter} filterFunction={filterDate} />\r\n                    <Column field=\"dose\" header=\"Dose (Slots)\" body={BodyTemplates.doseBodyTemplate} filter filterElement={doseFilter} />\r\n                    <Column field=\"fee_type\" header=\"Fee\" body={BodyTemplates.feeTypeBodyTemplate} filter filterElement={feeTypeFilter} />\r\n                    <Column field=\"age\" header=\"Age\" body={BodyTemplates.ageLimitBodyTemplate} filter filterElement={ageLimitFilter} />\r\n                    <Column field=\"vaccine\" header=\"Vaccine\" body={BodyTemplates.vaccineTypeBodyTemplate} filter filterElement={vaccineTypeFilter} />\r\n                </DataTable>\r\n            </div>\r\n        </div>\r\n    );\r\n}","export default __webpack_public_path__ + \"static/media/beep.40e5c7db.mp3\";","import React, { useEffect, useState, useRef } from 'react'\r\nimport AppMenuBar from '../header/Menubar'\r\nimport { Card } from 'primereact/card'\r\nimport { callPublicApis } from '../../utilities/http'\r\nimport SlotTable from './SlotDataTable'\r\nimport beepsound from '../../resources/beep.mp3'\r\nimport { Toast } from 'primereact/toast'\r\n\r\nexport default function Main() {\r\n    const audioRef = useRef(null)\r\n    const toastRef = useRef(null)\r\n    const [states, setStates] = useState([])\r\n    const [dataSet, setDataSet] = useState({\r\n        errorMessage: 'Start searching to view slots availability',\r\n        timeStamp: '',\r\n        slotList: []\r\n    })\r\n\r\n    const setData = (dataset) => {\r\n        if (dataset.slotList.length) {\r\n            audioRef.current.play()\r\n        }\r\n        toastRef.current.show({severity: 'info', summary: 'Checked cowin portal at: ', detail: dataset.timeStamp, life: 3000});\r\n        setDataSet(dataset)\r\n    }\r\n\r\n    useEffect( () => {\r\n        (async () => {\r\n            const response = await callPublicApis({\r\n                url: 'https://cdn-api.co-vin.in/api/v2/admin/location/states'\r\n            })\r\n            const listOfStates = await response.json();\r\n            setStates(listOfStates.states);\r\n        })()\r\n    }, [])\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"p-grid full-height\">\r\n                <div className=\"p-col-12 full-height\">\r\n                    <div className=\"p-grid\">\r\n                        <Toast ref={toastRef} position=\"bottom-right\"/>\r\n                        <div className=\"p-col-12 p-mb-0\">\r\n                            <AppMenuBar states={states} setDataSet={setData}/>\r\n                        </div>\r\n                        <div className=\"p-col-12 bottom-panel\">\r\n                            <Card className=\"p-col-12\">\r\n                                <SlotTable dataSet={dataSet}></SlotTable>\r\n                            </Card>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <audio ref={audioRef} >\r\n                <source src={beepsound}/>\r\n            </audio>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Main from './components/main/Main';\nimport reportWebVitals from './reportWebVitals';\nimport 'primeicons/primeicons.css'\nimport 'primereact/resources/themes/bootstrap4-light-blue/theme.css'\nimport 'primereact/resources/primereact.min.css'\nimport 'primeflex/primeflex.min.css'\nimport './layout/index.css'\nimport './layout/datatable.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}